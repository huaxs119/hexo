<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[java封装]]></title>
    <url>%2Fhexo%2F2019%2F01%2F04%2Fjava%E5%B0%81%E8%A3%85%2F</url>
    <content type="text"><![CDATA[不使用封装，很容易赋值错误，并且任何人都可以更改，造成信息的不安全 封装的实现设置类的属性为privatepublic成员修饰符，公共的，谁都可以访问 private成员修饰符，私有的，只有自己可以访问 使用set、get方法12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849class Employee&#123; private String name; private String id; private String gender; public String getName()&#123; return name; &#125; public void setName(String name)&#123; this.name = name; &#125; public String getId()&#123; return id; &#125; public void setId(String id)&#123; this.id = id; &#125; public String gender()&#123; return gender; &#125; public void setGender(String gender)&#123; if("男".equal(gender)||"女".equal(gender))&#123; this.gender = gender; &#125;else&#123; System.out.println("请输入\"男\"或者\"女\""); &#125; &#125; public void work()&#123; &#125;&#125;---------------------------------------------------------------public class demo&#123; public static void mian(String[] args)&#123; Employee e = new Employee(); e.setId("007"); e.setName("jame"); e.setGender("男"); System.out.println(e.getId()); System.out.println(e.getName()); System.out.println(e.getGender()); e.work(); &#125;&#125; 封装的好处 隐藏了类的具体实现 操作简单 提高对象数据的安全性]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java数组]]></title>
    <url>%2Fhexo%2F2019%2F01%2F03%2Fjava%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[数组定义同一种类型数据的集合，其实就是一个容器。数组一旦定义，那么里边存储的数据类型也就确定了。 数组可以自动给元素编号，方便操作元素。创建数组之后不能修改数组的大小，可以使用length属性获取数组的大小。 格式元素类型[] 数组名 = new 元素类型[元素个数或数组长度];int[] arr = new int[5]; 元素类型[] 数组名 = new 元素类型[]{元素,元素,…..};int[] arr = new int[]{3,5,1,7};int[] arr = {3,5,1,7} 数组的遍历12345678public class demo&#123; public static void main(String[] args)&#123; int[] x = &#123;1,2,3&#125;; for (int i = 0 ; i &lt; x.length ; i++)&#123; System.out.println(x[i]); &#125; &#125;&#125; 数组的常见异常角标越界1234567public class demo&#123; public static void main(String[] args)&#123; int[] x = &#123;1,2,3&#125;; System.out.println(x[3]); //java.lang.ArrayIndexOutOfBoundsException:3 &#125;&#125; 空指针异常12345678public class demo&#123; public static void main(String[] args)&#123; int[] x = &#123;1,2,3&#125;; x = null; System.out.println(x[1]); //java.lang.NullPointerException &#125;&#125; 内存分析栈内存特点：存储局部变量，变量使用完，自动释放。堆内存特点：存储的是数组和对象，凡是new关键字创建的实体都保存在堆内存里面，每一个对象都有一个内存首地址，对象都有默认的初始值。 数组的方法遍历：toString()将数组的元素以字符串的形式返回排序：sort()将数组按照升序排列二分查找：binarySearch在指定数组中查找元素，返回元素的索引，如果没有找到返回-1123456789101112public class demo&#123; public static void main(String[] args)&#123; int[] arr = &#123;2,45,12,3,6,23,12,53,32,15&#125; System.out.println(Arrays.toString(arr)); Arrays.sort(arr); System.out.println(Arrays.toString(arr)); System.out.println(Arrays.binarySearch(arr,12)); &#125;&#125; 二维数组实质就是存储的一维数组 数组类型[][] 数组名 = new 数组类型[一维数组的个数][每个一维数组中的元素个数] 属猪类型[][] 数组名 = new 数组类型{元素1,元素2},{元素1,元素2,元素3},{元素1,元素2}]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序算法]]></title>
    <url>%2Fhexo%2F2019%2F01%2F03%2F%E7%A8%8B%E5%BA%8F%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[排序直接排序1234567891011121314151617181920//用当前角标上的元素和后面的所有元素进行比较public class demo&#123; public static void mian(String[] args)&#123; int[] arr = &#123;4,2,64,34,12,45&#125;; selectSort(arr); &#125; public static void selectSort(int[] arr)&#123; for(int x=0;x&lt;arr.length-1;x++)&#123; for(int y=x+1;y&lt;arr.length;y++)&#123; if(arr[x]&gt;arr[y])&#123; int temp = arr[x]; arr[x] = arr[y]; arr[y] = temp; &#125; &#125; &#125; System.out.println(Arrays.toString(arr)); &#125;&#125; 冒泡排序1234567891011121314151617181920//相邻的元素进行比较public class demo&#123; public static void main(String[] args)&#123; int[] arr = &#123;4,2,64,34,12,45&#125;; bubbleSort(arr); &#125; public static void bubbleSort(int[] arr)&#123; for(int x=0;x&lt;arr.length-1;x++)&#123; for(int y=0;y&lt;arr.length-x-1;y++)&#123; if(arr[y]&gt;arr[y+1])&#123; int temp = arr[y]; arr[y] = arr[y+1]; arr[y+1] = temp; &#125; &#125; &#125; System.out.println(Arrays.toString(arr)); &#125;&#125; 二分法查找1234567891011121314151617181920212223//只对有序的数组有效public class demo&#123; public static void main(String[] args)&#123; int[] arr = &#123;2,4,7,8,9,14,16,22,26&#125;; int a = halfSearch(arr,22); System.out.println(a); &#125; public static int halfSearch(int[] arr,int key)&#123; int min = 0; int max = arr.length-1; int mid = (min+max)/2; while(arr[mid]!=key)&#123; if(key&gt;arr[mid])&#123; min = mid + 1; &#125;else if (key&lt;arr[mid])&#123; max = mid -1; &#125; mid = (max+min)/2; &#125; return mid; &#125;&#125; 数组翻转12345678910111213141516171819public class demo&#123; public static void main(String[] args)&#123; int[] arr = &#123;4,2,64,34,12,45&#125;; reverseArray(arr); &#125; public static void reverseArray(int[] arr)&#123; for (int start=0,end=arr.length-1;start&lt;end;start++,end--)&#123; swap(arr,start,end); &#125; System.out.println(Arrays.toString(arr)) &#125; public static void swap(int arr[],int a,int b)&#123; int temp = arr[a]; arr[a]=arr[b]; arr[b]=temp; &#125;&#125;]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java函数]]></title>
    <url>%2Fhexo%2F2019%2F01%2F03%2Fjava%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[函数提高代码的复用性12345678910//两数相加public class demo&#123; public static void main(String[] args)&#123; System.out.println(add(4,5)); &#125; public static int add(int i,int i1)&#123; return i+i1; &#125;&#125; 函数的格式修饰符 返回值类型 函数名(参数类型 形式参数1，参数类型 形式参数2,…){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行语句;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 返回值;} 函数的特点 定义函数可以将功能代码进行封装 函数只有被调用才会被执行 函数的出现提高了代码的复用性 对于函数没有具体返回值的情况，返回值类型用关键字void表示，那么该函数中的return语句如果在最后一行可以省略不写 函数中只能调用函数，不可以在函数内部定义函数。函数之间是平级的，相互是调用的关系 123456789101112131415161718192021//学生考试成绩划分public class demo&#123; public static void main(String[] args)&#123; printGrade(90); printGrade(59.5); &#125; public static void printGrade(double score)&#123; if (score &gt;= 90.0)&#123; System.out.println("A"); &#125;else if (score &gt;= 80.0)&#123; System.out.println("B"); &#125;else if (score &gt;= 70.0)&#123; System.out.println("C"); &#125;else if (score &gt;= 60.0)&#123; System.out.println("D"); &#125;else &#123; System.out.println("F"); &#125; &#125;&#125; 函数的重载在同一个类中，有一个以上的同名函数，只要函数的参数列表或参数类型不一样即可，与返回值无关，这些统称为方法的重载 12345678910111213141516171819202122232425//乘法表public class demo&#123; public static void main(String[] args)&#123; print99(); print99(4); &#125; private static void print99()&#123; for (int i = 1 ; i &lt;= 9 ; j++)&#123; for (int j = 1; j &lt; i; j++)&#123; System.out.println(j+"*"+i+"="+(i*j)+"\t"); System.out.println(); &#125; &#125; &#125; private static void print99(int num)&#123; for (int i = 1 ; i &lt;= num ; i++)&#123; for (int j = 1 ; i &lt;= i ; j++)&#123; System.out.print(j+"*"+i+"="+(i*j)+"\t"); &#125; System.out.println(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java流程控制]]></title>
    <url>%2Fhexo%2F2018%2F12%2F28%2Fjava%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%2F</url>
    <content type="text"><![CDATA[条件判断ifif(判断条件){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行的代码块1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行的代码块2;}1234567891011121314//提示用户输入一个整数，如果该整数是5的倍数，就打印"5的倍数"，如果是2的倍数就打印"2的倍数"public class demo&#123; public static void main(String[] args)&#123; Scanner scanner = new Scanner(System.in); Syetem.out.println("请输入一个整数："); int nextInt = scanner.nextInt(); if(nextInt%5==0)&#123; System.out.println("5的倍数"); &#125; if(nextInt%2==0)&#123; System.out.println("2的倍数"); &#125; &#125;&#125; if…elseif(判断条件){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行代码块1}else{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行代码块2}1234567891011//判断一个整数是奇数还是偶数public static void main(String[] args)&#123; Scanner scanner = new Scanner(System.in); System.out.println("请输入一个整数："); int nextInt = scanner.nextInt(); if(nextInt%2==0)&#123; System.out.println(nextInt+"是一个偶数"); &#125;else&#123; System.out.println(nextInt+"是一个奇数") &#125;&#125; if…else if…elseif(判断条件1){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行代码块1}else if(判断条件2){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行代码块2}else{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行代码块3}12345678910111213141516171819202122232425//根据用户定义的数值不同，打印对应的星期public class demo &#123; public static void main(String[] args)&#123; Scanner scanner = new Scanner(System.in); System.out.println("请输入一个整数："); int nextInt = scanner.nextInt(); if (nextInt == 0)&#123; System.out.println("星期天"); &#125;else if (nextInt == 1)&#123; System.out.println("星期一"); &#125;else if (nextInt == 2)&#123; System.out.println("星期二"); &#125;else if (nextInt == 3)&#123; System.out.println("星期三"); &#125;else if (nextInt == 4)&#123; System.out.println("星期四"); &#125;else if (nextInt == 5)&#123; System.out.println("星期五"); &#125;else if (nextInt == 6)&#123; System.out.println("星期六"); &#125;else &#123; System.out.println("输入有误"); &#125; &#125;&#125; 选择判断switch…case…defaultswitch(表达式){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 取值1:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行语句;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 取值2:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行语句;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行语句;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;} switch语句的特点： 选择的类型只有四种：byte，short，int，char 先判断所有的case，没有匹配的case就执行default case后跟的值必须是常量，不能是变量 123456789101112131415161718192021222324252627282930313233public class demo &#123; public static void main(String[] args)&#123; Scanner scanner = new Scanner(System.in); System.out.println("请输入一个整数"); int nextInt = scanner.nextInt(); switch (nextInt)&#123; case 0: System.out.println("星期天"); break; case 1: System.out.println("星期一"); break; case 2: System.out.println("星期二"); break; case 3: System.out.println("星期三"); break; case 4: System.out.println("星期四"); break; case 5: System.out.println("星期五"); break; case 6: System.out.println("星期六"); break; default: System.out.println("输入有误"); break; &#125; &#125;&#125; 12345678910111213141516171819202122232425262728293031public class filet1 &#123; public static void main(String[] args) throws Exception&#123; Scanner scanner = new Scanner(System.in); System.out.println("请输入一个月份："); int nextInt = scanner.nextInt(); switch (nextInt)&#123; case 12: case 1: case 2: System.out.println("Winter"); break; case 3: case 4: case 5: System.out.println("Spring"); break; case 6: case 7: case 8: System.out.println("Summer"); break; case 9: case 10: case 11: System.out.println("Autumn"); break; default: System.out.println("你的输入有误"); &#125; &#125;&#125; 循环whilewhile(条件表达式){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;执行语句;} 12345678910//计算1到9相加的和public class demo&#123; int sum = 0; int i = 1; while(i&lt;10)&#123; sum = sum + i; i++; &#125; System.out.println(sum);&#125; 123456789101112131415161718//猜数字游戏public class demo&#123; public static void main(String[] args)&#123; int num = (int)(Math.random()*100)+1; Scanner scanner = new Scanner(System.in); while(true)&#123; System.out.println("请输入1-100之间的整数"); int guessNum = Scanner.nextInt(); if(guessNum == num)&#123; System.out.println("中了"); &#125;else if(guessNum &lt; num)&#123; System.out.println("小了"); &#125;else&#123; System.out.println("大了") &#125; &#125; &#125;&#125; do…whiledo{&nbsp;&nbsp;&nbsp;&nbsp;执行语句;}while(条件表达式)无论条件是否满足，循环体至少被执行一次 12345678910111213141516171819202122//猜数字public class demo &#123; public static void main(String[] args) &#123; int guess = -1; int count = 0; int num = (int)(Math.random()*100)+1; Scanner scanner = new Scanner(System.in); do&#123; System.out.println("请输入1-100之间的数字"); guess = scanner.nextInt(); if (guess &gt; num)&#123; System.out.println("大了"); &#125;else if (guess &lt; num)&#123; System.out.println("小了"); &#125;else &#123; System.out.println("猜中了"); &#125; count++; &#125;while (num!=guess); System.out.println("你猜测的数字是："+num+"猜测了"+count+"次"); &#125;&#125; Math.random() 生成0-1之间的数字，double型Math.random()10 生成0-10之间的数字，double型(int)(Math.random()10) 强转int类型，去掉小数点，取0-9，便于计算(int)(Math.random()*10)+1 生成1-10之间的随机数 forfor(初始表达式;循环表达式;操作表达式){ &nbsp;&nbsp;&nbsp;&nbsp;执行语句;}12345678//想要打印5次helloworldpublic class dome&#123; public static void main(String[] args)&#123; for(int x=0;x&lt;5;x++)&#123; System.out.println("hello world"); &#125; &#125;&#125; 导致无限循环的格式while(true)和for（;;） 123456789101112//语句的嵌套//99乘法表public class demo&#123; public static void main(String[] arg)&#123; for (int x = 1 ; x &lt;= 9 ; x++)&#123; for ( int y = 1 ; y &lt;= x ; y++)&#123; System.out.print(y+"*"+x+"="+(x*y)+"\t"); &#125; System.out.println(); &#125; &#125;&#125; break和continuebreak终止最近的封闭循环，不会执行后面的语句，可以单独使用，也可以与标签一起使用 123456789101112131415public class demo&#123; public static void main(String[] args)&#123; for (int i = 0 ; i &lt; 4 ; i++)&#123; break; System.out.println("Hello world"); //这句话不会被执行 &#125; outer:for (int i = 0 ; i &lt; 5 ; i ++)&#123; inner: for(int j = i ; j &lt; 5 ; j ++)&#123; System.out.println("*"); break outer; //终止outer标签部分的for循环 &#125; System.out.println("\r\n"); &#125; &#125;&#125; continue跳出本次循环，执行下一次12345678910public class demo&#123; public static void main(String[] args)&#123; for (int i=0 ; i&lt; 10 ; i++)&#123; if (i == 5)&#123; continue; //跳过i=5 &#125; System.out.println(i); &#125; &#125;&#125;]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java运算符]]></title>
    <url>%2Fhexo%2F2018%2F12%2F28%2Fjava%E8%BF%90%E7%AE%97%E7%AC%A6%2F</url>
    <content type="text"><![CDATA[算数运算符1234567+ 加- 减* 乘/ 除% 取余++ 自增-- 自减 赋值运算符123456= 等于+= 加等于-= 减等于*= 乘等于/= 除等于%= 模等于 比较运算符1234567&gt; 大于&lt; 小于&gt;= 大于等于&lt;= 小于等于== 相等!= 不相等instanceof 检查是否是类的对象 逻辑运算符1234&amp;&amp; 与|| 或! 非^ 异或 位运算符1234&amp; and 两边都为1，结果为1，否则为0| or 两边都为0，结果为0，否则为1^ xor 两边不同，结果为1，否则为0~ 取反 异或特点一个数异或同一个数两次，结果还是那个数例 6^3^3=6 可以用于两个值进行交换 负数的二进制表示负数的二进制就是对应的正数的二进制取反之后加1例如 -6|00000000|00000000|00000000|00000110|6||—–|—–|—-|—-|–||11111111|11111111|11111111|11111001|取反||11111111|11111111|11111111|11111010|-6| 条件运算符12布尔表达式?表达式1:表达式2 布尔表达式为true，则返回表达式1，否则返回表达式2 移位操作符123&lt;&lt; 左移 空位补0，被移除的高位丢弃，空缺位补0&gt;&gt; 右移 被移动的二进制最高位是0，右移后，空缺位补0，最高位是1，空缺位补1&gt;&gt;&gt; 无符号右移 被移动二进制最高位无论是0或者是1，空缺位都用0补]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java基本数据类型]]></title>
    <url>%2Fhexo%2F2018%2F12%2F28%2Fjava%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[java的基本数据类型有八种 字符型 char使用’’引起来的单个字符,例如&#39;a&#39; boolean类型true 真false 假默认值是false 整数类型 类型 占位 范围 byte(字节) 8bit -128~127 short(短整型) 16bit -32768~32767 int(整型) 32bit -$2^{31}$~$2^{31}$-1 long(长整型) 64bit -$2^{63}$~$2^{63}$-1 整型默认为int类型 小数类型 （符合IEEE754）float 单精度 32bit 需要在数字结尾加上f，例如 12.3f，默认值为0.0fdouble 双精度 64bit 默认值为0.0d浮点数默认为double类型，浮点数不能用来表示精确的值，如货币 数据类型的转换自动类型转换（隐式转换）满足两个条件，彼此兼容并且目标类型取值范围大于源类型例：byte b = 100;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int x = b程序把b结果自动转换成int类型 强制类型转换(显示转换)将一个数值赋值给范围更小的数值范围的变量例： byte b = 100;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b = b + 2;2默认为int类型，b+2的时候b变量存储的值自动类型提升为int，运算结果为int类型，把int的值放入到byte的变量b中，无法放入，编译报错。可以写成 b = (byte)(b+2)或者 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b += 2 强制转换可能会损失精度]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java基础知识]]></title>
    <url>%2Fhexo%2F2018%2F12%2F28%2Fjava%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[java的环境 jre: java运行环境jre = java虚拟机（JVM）+ 核心类库（辅助java虚拟机运行的文件） jdk：java开发工具集jdk = jre + java开发工具 jdk目录 bin：存放java的开发工具db：JDK附带的一个轻量级的数据库，叫做Derbyjre：java运行环境lib：核心类库src.zip：java源代码 环境变量 classpath：java类文件的目录path：程序文件bin目录JAVA_HOME：java主目录 注释的种类 单行注释：//注释多行注释：/&lowast; 注释 &lowast;/文档注释：/&lowast;&lowast; 注释 &lowast;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@author 作者&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@version 版本&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@param 方法的参数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@return 返回值 转义符 转义字符 名称 \b Backspace(退格键) \t Tab \n 换行 \r 回车 \\ 反斜杠 \‘ 单引号 \“ 双引号 常量和变量常量是指在程序运行过程中，值是固定不变的变量指的是存储一段内存地址，可以修改存储地址]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos6安装mysql5.6]]></title>
    <url>%2Fhexo%2F2018%2F12%2F28%2F%E5%AE%89%E8%A3%85mysql5-6%2F</url>
    <content type="text"><![CDATA[关闭防火墙手动关闭当前系统中的防火墙service iptables stop 检查防火墙是否关闭service iptables status 关闭启动项的防火墙chkconfig iptables off 检查启动项的防火墙是否关闭chkconfig --list 注意：需要检查selinux修改/etc/selinux/config，将selinux的值改成disable 配置sysctl.conf1234567891011vm.swappiness = 0net.ipv4.neigh.default.gc_stale_time=120net.ipv4.conf.all.rp_filter=0net.ipv4.conf.default.rp_filter=0net.ipv4.conf.default.arp_announce = 2net.ipv4.conf.all.arp_announce=2net.ipv4.tcp_max_tw_buckets = 5000net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_syn_backlog = 1024net.ipv4.tcp_synack_retries = 2net.ipv4.conf.lo.arp_announce=2 检查是否已安装有mysqlrpm -qa | grep mysql如果已经安装了mysql，可以通过rpm -e mysql或者rpm -e --nodeps mysql或者yum remove mysql来删除mysql包 下载mysql源码包并上传到服务器https://dev.mysql.com/downloads/mysql/ 添加用户和组添加mysql组groupadd mysql添加用户组useradd -d /home/mysql -g mysql -m mysql设置密码passwd mysql 配置mysql环境变量登录mysql用户su - mysql配置用户环境变量 vim .bash_profile在PATH变量后面添加mysql的bin目录PATH=$PATH:/u01/mysql/bin立即生效环境变量 source .bash_profile 创建目录及授权(root用户下)创建数据目录mkdir -p /u01/mysql/data创建日志目录mkdir -p /u01/mysql/log/iblogmkdir -p /u01/mysql/log/binlog创建socket pid目录mkdir -p /u01/mysql/run创建临时目录mkdir -p /u01/mysql/tmp授权chown -R mysql:mysql /u01/mysqlchmod -R 755 /u01/mysql 解压mysql5.6tar -zxvf mysql-5.6.37.tar.gz 安装包及cmakeyum install -y cmake gcc gcc-c++ ncurses-devel bison zlib libxml openssl openssl-devel ncurses cmake编译在解压的源码包下面执行12345678910111213141516171819cmake \ -DCMAKE_INSTALL_PREFIX=/u01/mysql \ #基本目录 -DINSTALL_DATADIR=/u01/mysql/data \ #数据目录 -DDEFAULT_CHARSET=utf8 \ #字符集 -DDEFAULT_COLLATION=utf8_general_ci \ # 字符集排序 -DEXTRA_CHARSETS=all \ #支持哪些额外的字符集 -DWITH_SSL=yes \ #安全套接字 -DWITH_EMBEDDED_SERVER=1 \ #编译嵌入式服务器支持 -DENABLED_LOCAL_INFILE=1 \ #是否启用本地数据导入支持 -DWITH_MYISAM_STORAGE_ENGINE=1 \ #是否安装myisam -DWITH_INNOBASE_STORAGE_ENGINE=1 \ #是否安装innobase -DWITH_ARCHIVE_STORAGE_ENGINE=1 \ #是否安装archive -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \ # 是否安装blackhole -DWITH_FEDERATED_STORAGE_ENGINE=1 \ # 是否安装federated -DWITH_PARTITION_STORAGE_ENGINE=1 \ # 是否安装partition -DMYSQL_UNIX_ADDR=/u01/mysql/run/mysql.sock \ # mysql进程间通讯的套接字的位置 -DMYSQL_TCP_PORT=3306 \ # 默认端口 -DSYSCONFDIR=/etc \ # 配置参数地址 -DWITH_READLINE=on # 启用readline库支持 编译 make &amp;&amp; make install 编译的参数可以参考http://dev.mysql.com/doc/refman/5.5/en/source-configuration-options.html 配置mysql参数拷贝mysql.cnf到/u01/mysql设置文件的权限 初始化脚本(mysql用户下)到/u01/mysql/scripts下执行1./mysql_install_db --defaults-file=/u01/mysql/my.cnf --basedir=/u01/mysql --datadir=/u01/mysql/data --user=mysql 启动mysql（bin目录下）1./mysqld_safe --defaults-file=/u01/mysql/my.cnf --user=mysql &amp; 设置开机启动123cp support-files/mysql.server /etc/init.d/mysqlchkconfig mysql onservice mysql start --启动MySQL 多端口实例的情况下需要用下面的命令登录1mysql -uroot -p --socket=/u01/mysql/run/mysql.sock --port=3307 修改root密码12mysql -urootmysql&gt; SET PASSWORD = PASSWORD('123456'); 停止mysql1./mysqladmin -uroot -poracle -S /u01/my3306/run/mysql.sock shutdown &amp;]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sublime常用按键]]></title>
    <url>%2Fhexo%2F2018%2F12%2F27%2Fsublime%E5%B8%B8%E7%94%A8%E6%8C%89%E9%94%AE%2F</url>
    <content type="text"><![CDATA[最常用的 1、新建文件-输入”html:xt”后 按”Ctrl+E键”或 “tab键” ,可快速生成xhtml 1.0的模板2、新建文件-输入”html:5”后 按”Ctrl+E键”或 “tab键” ,可快速生成HTML5的模板3、新建文件-输入”!”后 按”Ctrl+E键”或 “tab键” ,可快速生成HTML5的模板 Ctrl+Shift+ [ 折叠代码 (在CSS中表示紧凑格式，在html中为折叠代码)Ctrl+Shift+ ] 折叠代码 (在CSS中表示扩张格式，在html中为恢复折叠代码) Ctrl+Shift+C CSS属性排序Ctrl+Alt+N 快速创建文件(填上文件扩展名可生成模板，例如：demo.html)Ctrl+Alt+K 刪除不必要的空白Ctrl+Shift+Alt+F 格式化JS代码Ctrl+Shift+Alt+M 压缩CSS/JS代码(生成结果为：文件名.min.css、文件名.min.js) F1 Chrome浏览器预览F2 Firefox浏览器预览F3 IE浏览器预览F4 打开调色盘F11 全屏F12 默认浏览器预览 ##按住鼠标滚轮下拉可多行编辑 Ctrl+D 选词 （反复按快捷键，即可继续向下同时选中下一个相同的文本进行同时编辑）Ctrl+G 跳转到相应的行Ctrl+J 合并行（已选择需要合并的多行时）Ctrl+L 选择整行（按住-继续选择下行）Ctrl+M 光标移动至括号内开始或结束的位置Ctrl+T 词互换Ctrl+U 软撤销Ctrl+P 查找当前项目中的文件和快速搜索；输入 @ 查找文件主标题/函数；或者输入 : 跳转到文件某行；Ctrl+R 快速列出/跳转到某个函数Ctrl+K Backspace 从光标处删除至行首Ctrl+K+B 开启/关闭侧边栏Ctrl+KK 从光标处删除至行尾Ctrl+K+T 折叠属性Ctrl+K+U 改为大写Ctrl+K+L 改为小写Ctrl+K+0 展开所有Ctrl+Enter 插入行后（快速换行）Ctrl+Tab 当前窗口中的标签页切换 Ctrl+Shift+A 选择光标位置父标签对儿Ctrl+Shift+D 复制光标所在整行，插入在该行之前ctrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找Ctrl+Shift+K 删除整行Ctrl+Shift+L 鼠标选中多行（按下快捷键），即可同时编辑这些行Ctrl+Shift+M 选择括号内的内容（按住-继续选择父括号）Ctrl+Shift+P 打开命令面板Ctrl+Shift+/ 注释已选择内容Ctrl+Shift+↑可以移动此行代码，与上行互换Ctrl+Shift+↓可以移动此行代码，与下行互换Ctrl+Shift+[ 折叠代码Ctrl+Shift+] 展开代码Ctrl+Shift+Enter 光标前插入行 Ctrl+PageDown 、Ctrl+PageUp 文件按开启的前后顺序切换 Ctrl+Z 撤销Ctrl+Y 恢复撤销Ctrl+F2 设置/取消书签Ctrl+/ 注释整行（如已选择内容，同“Ctrl+Shift+/”效果）Ctrl+鼠标左键 可以同时选择要编辑的多处文本 Shift+鼠标右键（或使用鼠标中键）可以用鼠标进行竖向多行选择Shift+F2 上一个书签Shift+Tab 去除缩进Alt+Shift+1（非小键盘）窗口分屏，恢复默认1屏Alt+Shift+2 左右分屏-2列Alt+Shift+3 左右分屏-3列Alt+Shift+4 左右分屏-4列Alt+Shift+5 等分4屏Alt+Shift+8 垂直分屏-2屏Alt+Shift+9 垂直分屏-3屏 Ctrl+Shift+分屏序号 将当前焦点页分配到分屏序号页 Alt+. 闭合当前标签Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑 Tab 缩进 自动完成F2 下一个书签F6 检测语法错误F9 行排序(按a-z)]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>文档编辑工具</tag>
        <tag>sublime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML5]]></title>
    <url>%2Fhexo%2F2018%2F12%2F27%2FHTML5%2F</url>
    <content type="text"><![CDATA[浏览器内核 Trident(IE内核)、EgdeHTML内核 Gecko(firefox) webkit(Safari) Chromuim/Blink(chrome) Presto(Opera) Web标准 结构(Structure) 表现(Presentation) 行为(Behavior) HTML骨架格式1234567&lt;HTML&gt; &lt;!-- 根节点 --&gt; &lt;head&gt; &lt;!-- 头标签 --&gt; &lt;title&gt;&lt;/title&gt; &lt;!-- 标题 --&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 主体标签 --&gt; &lt;/body&gt;&lt;/HTML&gt; 标签分类 双标签 &lt;标签名&gt;内容&lt;/标签名&gt; 单标签 &lt;标签名/&gt; 文档类型1&lt;!DOCTYPE html&gt; &lt;!-- html第一行添加，表明使用的是HTML5版本 --&gt; 字符集1&lt;meta charset="UTF-8"&gt; &lt;!-- 指定字符集 --&gt; HTML标签排版标签12345678910111213141516171819202122标题标签，从大到小&lt;h1&gt;标题文本&lt;/h1&gt;&lt;h2&gt;标题文本&lt;/h2&gt;&lt;h3&gt;标题文本&lt;/h3&gt;&lt;h4&gt;标题文本&lt;/h4&gt;&lt;h5&gt;标题文本&lt;/h5&gt;&lt;h6&gt;标题文本&lt;/h6&gt;段落标签&lt;p&gt;文本内容&lt;/p&gt;水平线标签(单标签)&lt;hr /&gt;换行标签&lt;br /&gt;div标签&lt;div&gt; 这是头部 &lt;/div&gt;span标签&lt;span&gt; 今日价格 &lt;span&gt; 文本格式化标签123456789101112131415粗体&lt;strong&gt; 粗体1 &lt;/strong&gt; &lt;!-- XHTML推荐 --&gt;&lt;b&gt; 粗体2 &lt;/b&gt;斜体&lt;em&gt; 斜体1 &lt;/em&gt; &lt;!-- XHTML推荐 --&gt;&lt;i&gt; 斜体2 &lt;/i&gt;加删除线&lt;del&gt; 带删除线1 &lt;/del&gt; &lt;!-- XHTML推荐 --&gt;&lt;s&gt; 带删除线2 &lt;/s&gt;加下划线&lt;ins&gt; 带下划线 &lt;/ins&gt; &lt;u&gt; 带下划线 &lt;/u&gt; 标签属性1&lt;标签名 属性1="属性值1" 属性2="属性值2" ...&gt; 内容 &lt;/标签名&gt; 图像标签1&lt;img src="图像URL" /&gt; img 标记属性 src 图像的路劲 alt 图像不能显示的时候，显示的文本 title 鼠标悬停时显示的文字 width 设置图像的宽度(像素、百分比) height 设置图像的高度(像素、百分比) border 设置图像的边框 链接标签1&lt;a href="跳转目标" target="目标窗口的弹出方式"&gt;文本或图像&lt;/a&gt; href用于指定链接目标的url地址 外部链接写法 https://www.xxx.com 内部链接写法 xxx.html 空链接写法 # 锚点定位写法 #id名 (跳到目标位置) target 用于指定链接页面的打开方式 _self 在当前窗口打开(默认) _blank 在新窗口打开 base标签可以设置整体链接的打开状态，写到head标签内1234&lt;head&gt; &lt;title&gt;base的用法&lt;/title&gt; &lt;base target="_blank" /&gt; &lt;!--页面的所有链接都在新窗口打开--&gt;&lt;/head&gt; 特殊字符标签 html字符 显示结果 描述 &amp;lt; &lt; 小于号 &amp;gt; &gt; 大于号 &amp;amp; &amp; and符号 &amp;quot; &quot; 引号 &amp;reg; &reg; 注册符号 &amp;copy; &copy; 版权符号 &amp;trade; &trade; 商标符号 &amp;nbsp; &nbsp; 空格 注释标签1&lt;!-- 注释语句 --&gt; 列表标签无序标签ul12345&lt;ul&gt; &lt;li&gt;列表项1&lt;/li&gt; &lt;li&gt;列表项2&lt;/li&gt; &lt;li&gt;列表项3&lt;/li&gt;&lt;/ul&gt; 列表项1 列表项2 列表项3 有序标签12345&lt;ol&gt; &lt;li&gt;列表项1&lt;/li&gt; &lt;li&gt;列表项2&lt;/li&gt; &lt;li&gt;列表项3&lt;/li&gt;&lt;/ol&gt; 列表项1 列表项2 列表项3 自定义列表12345678&lt;dl&gt; &lt;dt&gt;标题1&lt;/dt&gt; &lt;dd&gt;内容1&lt;/dd&gt; &lt;dd&gt;内容2&lt;/dd&gt; &lt;dt&gt;标题2&lt;/dt&gt; &lt;dd&gt;内容1&lt;/dd&gt; &lt;dd&gt;内容2&lt;/dd&gt;&lt;/dl&gt; 标题1 内容1 内容2 标题2 内容1 内容2 表格标签1234567891011&lt;table&gt; &lt;!-- 定义一个表格 --&gt; &lt;caption&gt;标题&lt;/caption&gt; &lt;tr&gt; &lt;!-- 用于定义表格中的行 --&gt; &lt;th&gt;表头标签&lt;/th&gt; &lt;!-- 表头，非必须项 --&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;单元格内的文字&lt;/td&gt; &lt;!-- 用于定义表格中的单元格 --&gt; ... &lt;/tr&gt; ...&lt;/table&gt; 表格属性 border设置表格的边框，默认为0，单位为像素 cellspacing 设置单元格边框之间的间距，默认为2px cellpadding 设置单元格内容与单元格边框之间的间距，默认为1px width 表格的宽度 height 表格的高度 align 表格在网页中的水平对齐方式，常用值为left/center/right 表格结构12&lt;thead&gt;&lt;/thead&gt; 用于定义表格头部，必须在&lt;table&gt;&lt;/table&gt;内，一般包含网页的logo和导航等头部信息&lt;tbody&gt;&lt;/tbody&gt; 用于定义表格的主体，在&lt;table&gt;&lt;/table&gt;内，一般包含网页中除头部和底部之外的其他内容 123456789101112131415161718192021222324&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;第一列&lt;/th&gt; &lt;th&gt;第二列&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt;脚1&lt;/td&gt; &lt;td&gt;脚2&lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1.1&lt;/td&gt; &lt;td&gt;1.2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2.1&lt;/td&gt; &lt;td&gt;2.2&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 合并单元格 跨行合并：rowspan=”合并几行” 跨列合并：colspan=”合并几列” 表单标签 完整的表单通常由表单控件(表单元素)、提示信息和表单域三个部分构成 表单控件：如文本输入框、密码输入框、复选框、提交按钮、重置按钮 提示信息：提示用户进行填写和操作 表单域：相当于一个容器，用来容纳表单控件和提示信息 input控件12345678910111213141516171819202122232425262728293031&lt;input /&gt;1 type="text" 单行文本输入框2 type="password" 密码输入框3 type="radio" 单选按钮，通过name来分组4 type="checkbox" 复选框5 type="button" 普通按钮6 type="submit" 提交按钮7 type="reset" 重置按钮8 type="image" 图像形式的提交按钮9 type="file" 文件域,上传文件10 type="email" 邮箱框11 type="tel" 手机框12 type="number" 数字框13 type="url" 网址框14 type="search" 搜索框15 type="range" 滑块框16 type="time" 小时分钟17 type="date" 年月日18 type="mouth" 年月19 type="color" 调色板20 name="xxx" 控件的名称21 value="xxx" input控件中的默认文本值22 size=xxx input控件在页面中的显示宽度23 checked="checked" 定义选择控件默认被选中的项24 maxlength=xxx 控件允许输入的最多字符数25 placeholder="xxxx" 占位符，当用户输入的时候里面的文字消失，删除所有问题之后出现26 autofocus 自动获得焦点27 multiple 多文件上传，配合file类型28 autocomplete 自动记录用于下次提示，需要提交按钮、name值29 required 不能为空30 accesskey="x" 通过快捷键定位焦点，例如 alt+x label标签label标签为input元素定义标注，用于绑定一个表单元素，当点击label标签的时候，被绑定的表单元素就会获得输入焦点 123for="id号"属性规定label与哪个表单元素绑定&lt;label for="male"&gt;Male&lt;/label&gt;&lt;input type="radio" name="sex" id="male" value="male"&gt; textarea控件(文本域)12如果需要输入大量的信息，就需要用到&lt;textarea&gt;&lt;/textarea&gt;&lt;textarea cols="每行中的字符数" rows="显示的行数"&gt;文本内容&lt;/textarea&gt; 下拉菜单12345&lt;select&gt; &lt;option&gt;选项1&lt;option&gt; &lt;option&gt;选项2&lt;option&gt; &lt;option&gt;选项3&lt;option&gt;&lt;/select&gt; &lt;select&gt;&lt;/select&gt;中至少包含一对&lt;option&gt;&lt;/option&gt;在option中定义selected=”selected”时，当前项为默认选中项 表单域form标签用于定义表单域，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器123&lt;form action="url地址" method="提交方式" name="表单名称"&gt;各种表单控件&lt;/form&gt; 常用属性 action在表单收集到信息后，需要将信息传递给服务器进行处理，action属性用于指定接收并处理表单数据的服务器程序的url地址 method用于设置表单数据的提交方式，取值为get（地址栏显示）或者post（地址栏隐藏） name用于指定表单的名称，以区分一个页面中的多个表单 其他常用标签12345678&lt;header&gt;文档的页眉&lt;/header&gt;&lt;nav&gt;导航栏&lt;/nav&gt;&lt;footer&gt;文档的页脚&lt;/footer&gt;&lt;article&gt;定义文章&lt;/article&gt;&lt;section&gt;文章中的节和区段&lt;/section&gt;&lt;aside&gt;侧边栏&lt;/aside&gt;&lt;datalist&gt;选项列表&lt;/datalist&gt; 搭配input中的text使用，input设置list属性，在datalist中有设置id的值与list相同&lt;fieldset&gt;&lt;/fieldset&gt; 可将表单内的相关元素分组打包 legend搭配使用 123456&lt;input type="text" name="text" list="text" &gt;&lt;datalist id="text"&gt;&lt;option value="中国"&gt;&lt;/option&gt;&lt;option value="美国"&gt;&lt;/option&gt;&lt;option value="英国"&gt;&lt;/option&gt;&lt;/datalist&gt; 示例： 1234567&lt;form&gt; &lt;fieldset&gt; &lt;legend&gt;学生卡&lt;/legend&gt; 姓名:&lt;input type="text" name=""&gt;&lt;br&gt; 年龄:&lt;input type="number" name=""&gt; &lt;/fieldset&gt;&lt;/form&gt; 学生卡 姓名: 年龄: 多媒体标签 &lt;embed&gt;&lt;/embed&gt; 播放多媒体&lt;audio&gt;&lt;/audio&gt; 音频播放 &nbsp;&nbsp;&nbsp;&nbsp;src 音频路径 &nbsp;&nbsp;&nbsp;&nbsp;autoplay=”autoplay” 自动播放 &nbsp;&nbsp;&nbsp;&nbsp; controls 播放控制台 &nbsp;&nbsp;&nbsp;&nbsp; loop 循环播放 &nbsp;&nbsp;&nbsp;&nbsp; &lt;source src=”…”&gt; 多种音频格式，用于兼容各种浏览器&lt;video&gt;&lt;/video&gt; 视频播放]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java File类操作]]></title>
    <url>%2Fhexo%2F2018%2F12%2F27%2FJava-File%E7%B1%BB%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[操作方法1234567891011121314151617181920212223242526272829303132File(String pathname)File(File parent,String child)File(String parent,String child)file.exists() //文件或文件夹是否存在File.separator() //查看文件系统的目录分隔符file.createNewFile() //创建一个空文件dir.mkdir() //创建一个目录dir.mkdirs() //迭代创建多个目录dir.renameTo(File dest) //重命名文件或文件夹file.delete() //删除文件或者文件夹file.deleteOnExit() //JVM终止时删除文件或者目录file.isFile() //是否是文件dir.isDirectory() //是否是目录file.isHidden() //是否是隐藏文件或目录file.isAbsolute() //是否是绝对路径file.getName() //获取文件或文件夹的名称，不包含路径file.getPath() //获取路径file.getAbsolute() //获得绝对路径file.length() //获得文件的大小file.getParent() //获得父路径file.lastModified() //获得最后一次修改时间File.listRoot() //列出所有的根目录file.list() //返回目录下的文件或者目录名，包含隐藏文件file.listFiles() //返回目录下的文件或者目录对象，包含绝对路径file.list(FilenameFilter filter) //返回指定当前目录下符合过滤条件的子文件或者子目录file.listFiles(FilenameFilter filter) //返回指定当前目录下符合过滤条件的子文件或者子目录 操作实例12345678public class FileTest &#123; public static void main(String[] args) &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt/Filetest.txt"); File file1 = new File("E:\\Jtxt\\","JavaFile.txt"); &#125;&#125; 12345678public class FileTest &#123; public static void main(String[] args) &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt/Filetest.txt"); //查看指定文件或文件夹是否存在 System.out.println(file.exists()); &#125;&#125; 12345678public class FileTest &#123; public static void main(String[] args) &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt/Filetest.txt"); //文件系统的分隔符 System.out.println(File.separator); &#125;&#125; 12345678910111213141516public class FileTest &#123; public static void main(String[] args) throws Exception &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt/Filetest.txt"); File file1 = new File("E:/Jtxt/File"); File file2 = new File("E:/Jtxt/f1/f2/f3"); //创建文件 file.createNewFile(); //创建文件夹 file1.mkdir(); //创建多层文件夹 file2.mkdirs(); //重命名 file.renameTo(new File("E:/Jtxt/Filt1.txt")); &#125;&#125; 12345678910public class FileTest &#123; public static void main(String[] args) throws Exception &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt/Filetest.txt"); //删除文件或文件夹 file.delete(); //JVM终止时删除文件或文件夹 file.deleteOnExit(); &#125;&#125; 123456789101112131415public class FileTest &#123; public static void main(String[] args) throws Exception &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt/Filetest.txt"); File dir = new File("E:/Jtxt/File"); //是否是文件 System.out.println(file.isFile()); //是否是目录 System.out.println(dir.isDirectory()); //是否是隐藏文件或目录 System.out.println(file.isHidden()); //是否是绝对路径 System.out.println(file.isAbsolute()); &#125;&#125; 12345678910111213141516171819public class FileTest &#123; public static void main(String[] args) throws Exception &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt/Filetest.txt"); //获得文件或文件夹的名称，不包含路径 System.out.println(file.getName()); //获得路径 System.out.println(file.getPath()); //获得绝对路径 System.out.println(file.getAbsolutePath()); //获得文件的大小 System.out.println(file.length()); //获得父路径 System.out.println(file.getParent()); //获得最后一次修改时间 System.out.println(file.lastModified()); &#125;&#125; 12345678910111213141516171819202122public class FileTest &#123; public static void main(String[] args) throws Exception &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt"); //列出所有的根目录 File[] files = File.listRoots(); for (File dir : files)&#123; System.out.println(dir); &#125; //列出目录下的文件或目录名，包含隐藏文件 String[] files1 = file.list(); for (String dirname : files1)&#123; System.out.println(dirname); &#125; //累出目录下的文件或者目录对象，包含绝对路径 File[] files2 = file.listFiles(); for (File dirname : files2)&#123; System.out.println(dirname); &#125; &#125;&#125; 123456789101112131415161718192021222324public class FileTest &#123; public static void main(String[] args) throws Exception &#123; //指定一个文件或文件夹 File file = new File("E:/Jtxt"); //返回指定当前目录下符合过滤条件的子文件或子目录 String[] files = file.list(new MyFilter()); for(String dir : files)&#123; System.out.println(dir); &#125; //返回指定当前目录下符合过滤条件的子文件或者子目录 File[] files1 = file.listFiles(new MyFilter()); for(File dir : files1)&#123; System.out.println(dir); &#125; &#125;&#125;class MyFilter implements FilenameFilter&#123; @Override public boolean accept(File dir, String name) &#123; return name.endsWith("txt"); &#125;&#125;]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>file</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java IO流]]></title>
    <url>%2Fhexo%2F2018%2F12%2F27%2Fjava-IO%E6%B5%81%2F</url>
    <content type="text"><![CDATA[IO流划分 数据流向划分——–|输入流——–|输出流处理的单位划分——–|字节流(二进制数据)——–|字符流(以字符为单位) 字节流 InputStream 所有输入字节流的基类——–| FileInputStream 读取文件数据的输入字节流——–| BufferedInputStream 缓冲输入字节流 OutputStream 所有输出字节流的基类——–| FileOutputStream 向文件输出数据的输出字节流——–| BufferedOutputStream 缓冲输出字节流 字节流实现步骤FileInputStream 读取文件步骤 找到目标文件 建立数据的输入通道 读取文件中的数据 关闭资源 123456789101112public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/Filetest.txt"); FileInputStream fileInputStream = new FileInputStream(file); int length=0; byte[] buf = new byte[1024]; while((length=fileInputStream.read(buf))!=-1)&#123; System.out.println(new String(buf,0,length)); &#125; fileInputStream.close(); &#125;&#125; BufferedInputStream步骤 找到目标文件 建立数据的输入通道 建立缓冲输入字节流 关闭资源 12345678910111213public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/Filetest.txt"); FileInputStream fileInputStream = new FileInputStream(file); BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream); int length = 0; byte[] buff = new byte[1024*8]; while ((length=bufferedInputStream.read(buff))!=-1)&#123; System.out.println(new String(buff,0,length)); &#125; bufferedInputStream.close(); &#125;&#125; FileOutputStream步骤 找到目标文件 建立数据的输出通道 把数据转换成字节数组写出 关闭资源 123456789public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/java.txt"); FileOutputStream fileOutputStream = new FileOutputStream(file); String s = "湖南省长沙市岳麓区"; fileOutputStream.write(s.getBytes("UTF8")); fileOutputStream.close(); &#125;&#125; BuffereOutputStream步骤 找到目标文件 建立数据的输出通道 把数据写出 关闭资源 12345678910public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/java1.txt"); FileOutputStream fileOutputStream = new FileOutputStream(file); BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(fileOutputStream); String s = "大江东去，浪淘尽，千古风流人物。故垒西边，人道是，三国周郎赤壁。乱石穿空，惊涛拍岸，卷起千堆雪。"; bufferedOutputStream.write(s.getBytes("UTF8")); bufferedOutputStream.close(); &#125;&#125; 实现拷贝效果123456789101112131415public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/java1.txt"); File file1 = new File("e:/Jtxt/java2.txt"); BufferedInputStream bis = new BufferedInputStream(new FileInputStream(file)); BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(file1)); int content = 0; byte[] buff = new byte[1024*8]; while ((content=bis.read(buff))!=-1)&#123; bos.write(buff,0,content); &#125; bos.close(); bis.close(); &#125;&#125; 字符流 Reader输入字符流的基类——-| FileReader 读取文件的输入字符流——-| BufferedReader 缓冲输入字符流 Writer 输出字符流的基类——-| FileWriter 写入文件的输出字符流——-| BufferedWriter 缓冲输出字符流，提供了一个8192长度的字符数组 FileReader步骤 找到目标文件 建立数据的输入通道 读取数据 关闭资源 1234567891011public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/java1.txt"); FileReader fileReader = new FileReader(file); int content = 0; char[] buff = new char[1024]; while ((content=fileReader.read(buff))!=-1)&#123; System.out.println(new String(buff,0,content)); &#125; &#125;&#125; BufferedReader步骤 找到目标文件 建立数据的输入通道 1234567891011public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/java1.txt"); FileReader fileReader = new FileReader(file); BufferedReader bufferedReader = new BufferedReader(fileReader); String line = null; while ((line=bufferedReader.readLine())!=null)&#123; System.out.println(line); &#125; &#125;&#125; FileWriter步骤 找到目标文件 建立数据的输出通道 写出数据 关闭资源 123456789101112131415public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/java3.txt"); FileWriter fileWriter = new FileWriter(file); String s = "明月几时有？把酒问青天。\n" + "\n" + "不知天上宫阙，今夕是何年。\n" + "\n" + "我欲乘风归去，\n" + "\n" + "又恐琼楼玉宇，高处不胜寒。"; fileWriter.write(s); fileWriter.close(); &#125;&#125; BufferedWriter步骤 找到目标文件 建立数据的输出通道 12345678910111213public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/java4.txt"); FileWriter fileWriter = new FileWriter(file); BufferedWriter bufferedWriter = new BufferedWriter(fileWriter); String s = "这是苏轼的一首名词《卜算子》。" + "现在通行的各个版本的词选中都有一个小序：“黄州定慧院寓居作。”" + "据史料记载，此词为公元1083年（神宗元丰六年）初作于黄州，" + "定慧院在今天的湖北黄冈县东南，苏轼另有《游定惠院记》一文。"; bufferedWriter.write(s); bufferedWriter.close(); &#125;&#125; 实现拷贝效果1234567891011121314public class FileTest &#123; public static void main(String[] args) throws Exception &#123; File file = new File("e:/Jtxt/java3.txt"); File file1 = new File("e:/Jtxt/java5.txt"); BufferedReader br = new BufferedReader(new FileReader(file)); BufferedWriter bw = new BufferedWriter(new FileWriter(file1)); String line = null; while ((line=br.readLine())!=null)&#123; bw.write(line); &#125; bw.close(); br.close(); &#125;&#125;]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>io流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python3格式化输出]]></title>
    <url>%2Fhexo%2F2018%2F12%2F27%2FPython3%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA%2F</url>
    <content type="text"><![CDATA[格式化输出分两种 1. %格式化123456789name = input("请输入你的名字：")age = int(input("请输入你的年龄："))job = input("请输入你的工作：")print("""-----------%s------------ name: %s age: %d job: %s -------------------------""" %(name,name,age,job)) % 代表占位符%s 代表字符串%d 代表数字%% 代表%分号 2. format格式化format格式化又分三种形式 2.1 {}123456789name = input("请输入你的名字：")age = int(input("请输入你的年龄："))job = input("请输入你的工作：")print("""-----------&#123;&#125;------------ name: &#123;&#125; age: &#123;&#125; job: &#123;&#125; -------------------------""".format(name,name,age,job)) 2.2 {n}123456789name = input("请输入你的名字：")age = int(input("请输入你的年龄："))job = input("请输入你的工作：")print("""-----------&#123;0&#125;------------ name: &#123;0&#125; age: &#123;1&#125; job: &#123;2&#125; -------------------------""".format(name,age,job)) #跟第一种相比，重复的元素可以用相同的&#123;n&#125;指定，不需要重复 2.3 {name}123456789name = input("请输入你的名字：")age = int(input("请输入你的年龄："))job = input("请输入你的工作：")print("""-----------&#123;name&#125;------------ name: &#123;name&#125; age: &#123;age&#125; job: &#123;job&#125; -------------------------""".format(name=name,age=age,job=job))]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python3运算符]]></title>
    <url>%2Fhexo%2F2018%2F12%2F26%2FPython3%20%E8%BF%90%E7%AE%97%E7%AC%A6%2F</url>
    <content type="text"><![CDATA[1. 基本运算符+ 加 - 减 * 乘 % 除 ** 幂运算 // 取整 2. 比较运算符== 比较对象是否相等 != 比较对象是否不相等 &lt;&gt; 是否不相等 > 是否大于 &lt; 是否小于 >= 大于等于 &lt;= 小于等于 3. 逻辑运算and 与 x and y x为false则返回x，否则返回yor 或 x or y x为false返回y，否则返回xnot 非 4. 运算符优先级( ) &gt; not &gt; and &gt;or]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github和git设置]]></title>
    <url>%2Fhexo%2F2018%2F12%2F26%2Fgithub%E5%92%8Cgit%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[github仓库在创建的时候可以选择是否初始化，不同的选择对应的Git的操作也是不同的 创建仓库的时候不进行初始化1. 登录Github 2. 创建库 3. 在本地创建git存放的目录并在目录中选择命令行 4. 在命令行中按github给的命令依次输入123456echo "# 库名" &gt;&gt; README.mdgit initgit add README.mdgit commit -m "first commit"git remote add origin git@github.com:huaxs119/库名.gitgit push -u origin master 5. 执行成功之后可以看到 6. 需要注意的部分在hosts文件中添加13.250.177.223 github.com 配置ssh密钥如果没有配置会出现如下提示 执行下面的命令cd ~/.sshssh-keygen 打开密钥文件vim ~/.ssh/id_rsa.pub复制密钥配置到github上 在命令行中回到git存放目录执行git push -u origin master 创建仓库的时候进行初始化1. 创建仓库的时候 2. github会自动建好库 3. 将远程库拉回到本地即可 4. 本地创建存放目录并打开命令行 5. 命令行执行clone命令，地址为第三步的ssh地址git clone git@github.com:huaxs119/库名.git]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>git</tag>
      </tags>
  </entry>
</search>
